package infixtopostfix;
import java.io.*;
public class InfixToPostfix {
 
    public static void main(String[] args) throws IOException {
        BufferedReader fc = new BufferedReader (new InputStreamReader(System.in));
        System.out.println("Enter :");
        String f = fc.readLine();
        toPostfix(f+"#");
        
    }

    public static void toPostfix(String exp) {
        String output = " ";
        String stack = "#";
        System.out.println("Token\tStack\t\tOutput");

        for (int i = 4; i < exp.length(); i++) {
            char current = exp.charAt(i);
            int lastStack = stack.length() - 1;
            System.out.print(current + "\t");

            if (Character.isLetterOrDigit(current)) {
                output += current;
            } else if (current == '(') {
                stack += current;
            } else if (current == ')') {
                while (stack.charAt(lastStack) != '(') {
                    output += stack.charAt(lastStack);
                    lastStack -= 1;
                }
                stack = stack.substring(0, lastStack);
            } else {
                while (stack.length() != 1 && getPrec(stack.charAt(lastStack)) >= getPrec(current)) {
                    output += stack.charAt(lastStack);
                    stack = stack.substring(0, lastStack);
                    lastStack = stack.length() - 1;
                }
                if (current == '#') {
                    stack = "";
                }
                stack += current;
            }
            System.out.println(stack + "\t\t" + output);
        }
    }

    // A utility function to return precedence of a given operator 
    // Higher returned value means higher precedence 
    static int getPrec(char ch) {
        switch (ch) {
            case '+':
            case '-':
                return 1;

            case '*':
            case '/':
                return 2;

            case '^':
            case '%':
                return 3;
        }
        return 0;
    }
}